// Generated by CoffeeScript 1.3.3
(function() {
  var _this = this;

  this.sound = (function() {
    var decreaseVolume, increaseVolume, init, isPaused, isRegistered, pause, play, register, setVolume, stop, stopAll, _parent, _showError, _soundFiles;
    _soundFiles = {};
    _parent = null;
    _showError = function(err) {
      return _this.console.log(err);
    };
    init = function(p) {
      return {
        _parent: p
      };
    };
    isRegistered = function(name) {
      return _soundFiles[name] != null;
    };
    isPaused = function(name) {
      if (isRegistered(name)) {
        return _soundFiles[name].paused;
      } else {
        return false;
      }
    };
    setVolume = function(name, vol) {
      var s;
      if (isRegistered(name)) {
        s = _soundFiles[name];
        s.volume = vol;
        return s.volume = _soundFiles[name].volume;
      }
    };
    increaseVolume = function(name, amount) {
      var s;
      amount = amount != null ? amount : 0.1;
      if (isRegistered(name)) {
        s = _soundFiles[name];
        s.volume += amount;
        return s.volume = _soundFiles[name].volume;
      }
    };
    decreaseVolume = function(name, amount) {
      return increaseVolume(name, -amount);
    };
    play = function(name, loop_) {
      var s;
      if (!isRegistered(name)) {
        showError(name + " is not registered in the sound module!");
        return;
      }
      s = _soundFiles[name];
      loop_ = loop_ != null ? loop_ : false;
      if (s.audioElement === null || !s.audioElement.ended) {
        if (s.audioElement !== null) {
          s.audioElement.addEventListener("ended", function() {
            return _parent.removeChild(this);
          });
        }
        s.audioElement = _this.document.createElement("audio");
        s.audioElement.setAttribute("src", s.src);
        s.audioElement.volume = s.volume;
        if (loop_) {
          s.audioElement.setAttribute("loop_", "");
        }
        _parent.appendChild(s.audioElement);
      }
      s.audioElement.play();
      s.playing = true;
      s.paused = false;
      return s.stopped = false;
    };
    pause = function(name) {
      var s;
      if (!isRegistered(name)) {
        showError(name + " is not registered in the sound module!");
        return;
      }
      s = _soundFiles[name];
      s.audioElement.pause();
      return s.paused = true;
    };
    stop = function(name) {
      var s;
      if (!isRegistered(name)) {
        showError(name + " is not registered in the sound module!");
        return;
      }
      s = _soundFiles[name];
      if (s.audioElement) {
        _parent.removeChild(s.audioElement);
        s.audioElement = null;
        return s.stopped = true;
      }
    };
    stopAll = function() {
      var soundName, _i, _len;
      for (_i = 0, _len = _soundFiles.length; _i < _len; _i++) {
        soundName = _soundFiles[_i];
        stop(soundName);
      }
    };
    register = function(name, file) {
      if (name in _soundFiles) {
        showError(name + " is already registered!");
        return;
      }
      _soundFiles[name] = {
        src: file,
        stopped: true,
        paused: false,
        volume: 0.5,
        audioElement: null
      };
    };
    return {
      init: init,
      isRegistered: isRegistered,
      register: register,
      isPaused: isPaused,
      setVolume: setVolume,
      increaseVolume: increaseVolume,
      decreaseVolume: decreaseVolume,
      play: play,
      pause: pause,
      stop: stop,
      stopAll: stopAll
    };
  })();

}).call(this);
